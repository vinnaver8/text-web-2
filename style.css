background: linear-gradient(
  90deg,
  rgba(255,200,50,0) 0%, 
  rgba(255,200,50,0.8) 50%, 
  rgba(255,200,50,0) 100%
);
width: 150%; height: 8px;
filter: blur(4px);i
 /* 3D keyboard perspective and keys */
    #keyboard {
      transform: perspective(800px) rotateX(25deg) scale(1.05);
      transform-origin: center top;
      position: relative;
      z-index: 10;
    }
    #keyboard .key {
      background-color: #222;
      border: 1px solid #333;
      border-radius: 0.375rem;
      box-shadow: 0 4px 6px rgba(0,0,0,0.5);
      color: #ccc;
      width: 3rem; height: 3rem;
      display: flex; align-items: center; justify-content: center;
      user-select: none;
      transition: transform 0.1s ease, box-shadow 0.1s ease, background-color 0.1s ease;
    }
    #keyboard .key.highlight {
      background-color: #444;
      box-shadow: 0 0 20px 8px rgba(234,130,53,0.75);
      color: #fff;
      transform: translateY(-4px) scale(1.1);
    }
    #keyboardGlow {
      position: absolute;
      left: 50%; bottom: 0;
      transform: translateX(-50%);
      width: 600px; height: 300px;
      background: radial-gradient(circle at center, rgba(255, 85, 0, 0.4) 0%, transparent 80%);
      filter: blur(80px);
      pointer-events: none;
      z-index: 5;
    }
/* Optional: cursor for typewriter effect */
    .typing-text::after {
      content: '|';
      opacity: 0.5;
      animation: blink-caret 1s steps(1) infinite;
    }
    @keyframes blink-caret {
      0%, 100% { opacity: 0; }
      50% { opacity: 0.5; }
    }
 /* container holds SVG + ripple rings */
    .notif-container {
      @apply relative w-full h-full;
    }

    /* ripple ring CSS */
    .ring {
      position: absolute;
      top: 50%; left: 50%;
      width: 100%; height: 100%;
      border-radius: 50%;
      pointer-events: none;
      animation: ripple 6s linear infinite;
    }
    @keyframes ripple {
      0% {
        transform: translate(-50%, -50%) scale(0);
        opacity: 0.6;
        box-shadow:
          0 0 0   0px   rgba(0, 128, 255, 0.4),
          0 0 0  20px  rgba(128, 0, 255, 0.3),
          0 0 0  40px  rgba(255, 128, 0,   0.2),
          0 0 0  60px  rgba(255, 128, 0,   0);
      }
      50% {
        transform: translate(-50%, -50%) scale(1);
        opacity: 0.4;
        box-shadow:
          0 0 0  40px  rgba(0, 128, 255, 0.3),
          0 0 0  60px  rgba(128, 0, 255, 0.2),
          0 0 0  80px  rgba(255, 128, 0,   0.1),
          0 0 0 100px rgba(255, 128, 0,   0);
      }
      100% {
        transform: translate(-50%, -50%) scale(1.5);
        opacity: 0;
        box-shadow:
          0 0 0  80px  rgba(0,   128, 255, 0),
          0 0 0 100px rgba(128, 0,   255, 0),
          0 0 0 120px rgba(255, 128, 0,   0),
          0 0 0 140px rgba(255, 128, 0,   0);
      }
    }
    .ring:nth-child(1) { animation-delay: 0s; }
    .ring:nth-child(2) { animation-delay: 1s; }
    .ring:nth-child(3) { animation-delay: 2s; }
    .ring:nth-child(4) { animation-delay: 3s; }
    .ring:nth-child(5) { animation-delay: 4s; }

    /* SVG element animations */
    .notif-container svg {
      position: absolute;
      top: 0; left: 0;
    }
    .rings circle {
      transform-origin: 150px 150px;
    }
    .rings circle:nth-child(1) { animation: spin 8s linear infinite reverse; }
    .rings circle:nth-child(2) { animation: spin 6s linear infinite; }
    @keyframes spin { to { transform: rotate(360deg); } }

    .bell {
      opacity: 0;
      animation: fadeIn 1s ease-out forwards 0.5s;
    }
    @keyframes fadeIn {
      from { opacity: 0; transform: scale(0.8) translate(-5px,-5px); }
      to   { opacity: 1; transform: scale(1) translate(0,0); }
    }

    .badge {
      transform-origin: 180px 120px;
      animation: pop 0.6s ease-out forwards 0.7s;
    }
    @keyframes pop {
      0%   { transform: scale(0.2) translate(10px,-10px); opacity: 0; }
      60%  { transform: scale(1.2) translate(-2px,2px); opacity: 1; }
      100% { transform: scale(1) translate(0,0); }
    }

    .pulse {
      transform-origin: 180px 120px;
      animation: pulseBadge 2s infinite ease-in-out;
    }
    @keyframes pulseBadge {
      0%   { transform: scale(1); opacity: 0.5; }
      50%  { transform: scale(1.4); opacity: 0; }
      100% { transform: scale(1); opacity: 0.5; }
}
/* wall Box style code animation */
/* Main Screen Container */
    .screen-container {
      width:500px;
      height:330px;
      background:#0d1117;
      border-radius:12px;
      box-shadow:0 0 20px rgba(0,0,0,0.7);
      display:flex;
      overflow:hidden;
      position:relative;
    }

    /* Left Side: Chat Wrapper */
    .chat-wrapper {
      width:50%;
      border-right:1px solid #222;
      display:flex;
      flex-direction:column;
    }

    .chat-header {
      padding:12px;
      background:#161a1f;
      text-align:center;
      font-weight:600;
      border-bottom: 1px solid #222;
    }

    .messages {
      flex:1;
      padding:12px;
      display:flex;
      flex-direction:column;
      gap:8px;
      overflow-y:auto;
      scrollbar-width: thin; /* Firefox */
      scrollbar-color: #5e8aff #1f2933; /* Firefox */
    }

    /* Custom scrollbar for Webkit browsers */
    .messages::-webkit-scrollbar {
      width: 8px;
    }
    .messages::-webkit-scrollbar-track {
      background: #1f2933;
      border-radius: 10px;
    }
    .messages::-webkit-scrollbar-thumb {
      background-color: #5e8aff;
      border-radius: 10px;
      border: 2px solid #1f2933;
    }

    .message {
      max-width:85%; /* Adjusted for better appearance */
      padding:10px 14px; /* Adjusted padding */
      border-radius:10px;
      opacity:0;
      transform:translateY(10px);
      animation:fadeIn 0.3s forwards;
      font-size: 0.95rem;
      line-height: 1.4;
    }

    .user {
      align-self:flex-end;
      background:#2a3942;
      box-shadow:0 2px 8px rgba(0,0,0,0.2);
    }

    .ai {
      align-self:flex-start;
      background:#1f2933;
      box-shadow:0 2px 8px rgba(94,138,255,0.2);
    }

    .ai.typing-message {
      background: #1f2933; /* Keep background for typing message */
      box-shadow: none; /* No shadow for typing indicator */
    }

    /* Typing Indicator */
    .typing-indicator {
      display:inline-flex; /* Changed to inline-flex */
      gap:4px;
      margin-left:4px;
      align-items: center;
    }
    .typing-indicator span {
      width:5px;
      height:5px;
      background:#5e8aff;
      border-radius:50%;
      animation:blink 1s infinite;
    }
    .typing-indicator span:nth-child(2){animation-delay:.2s}
    .typing-indicator span:nth-child(3){animation-delay:.4s}

    /* Right Side: Animation Box */
    .right-box {
      width:50%;
      position:relative;
      display:flex;
      flex-direction:column;
      padding:20px; /* Added padding to the right box itself */
    }

    .anim-box {
      flex:1;
      background:#161a1f;
      border-radius:10px;
      position:relative;
      overflow:hidden;
      box-shadow:0 0 15px rgba(94,138,255,0.5);
      display:flex;
      flex-direction:column;
      align-items:center;
      justify-content:center;
      padding:20px;
      transition: box-shadow 0.5s ease-in-out; /* Smooth transition for shadow */
    }

    /* Shimmer Effect for Image Generation */
    .anim-box.shimmer {
        box-shadow:0 0 25px rgba(94,138,255,0.8), 0 0 10px rgba(255,255,255,0.3); /* Enhanced glow */
    }
    .anim-box.shimmer::before {
      content:'';
      position:absolute;
      top:-100%;
      left:-100%;
      width:200%;
      height:200%;
      background:linear-gradient(135deg,rgba(255,255,255,0.04),rgba(255,255,255,0.1),rgba(255,255,255,0.04));
      transform:rotate(25deg);
      animation:shimmer 3s infinite;
    }

    .anim-icon {
      width:60px;
      height:60px;
      fill:#5e8aff;
      z-index:1;
    }

    .anim-text {
      z-index:1;
      margin-top:10px;
      font-size:1rem;
      text-align: center;
    }

    /* Process Details / Thought Process Section */
    .process-details {
      display: none; /* Hidden by default */
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: #0f131a;
      border-radius: 10px;
      padding: 20px;
      overflow-y: auto;
      z-index: 2;
      animation: fadeIn 0.5s forwards;
      color: #c0c0c0;
      font-size: 0.9rem;
      line-height: 1.5;
      text-align: left;
      flex-direction: column; /* Ensure it's a flex container for its children */
      gap: 10px; /* Spacing between paragraphs/steps */
      scrollbar-width: thin; /* Firefox */
      scrollbar-color: #5e8aff #1f2933; /* Firefox */
    }
    .process-details::-webkit-scrollbar {
      width: 8px;
    }
    .process-details::-webkit-scrollbar-track {
      background: #1f2933;
      border-radius: 10px;
    }
    .process-details::-webkit-scrollbar-thumb {
      background-color: #5e8aff;
      border-radius: 10px;
      border: 2px solid #1f2933;
    }

    .process-details h3 {
        color: #5e8aff;
        font-size: 1.1rem;
        margin-bottom: 10px;
    }
    .process-details p {
        margin-bottom: 8px;
    }
    .process-details .process-step {
        display: flex;
        align-items: center;
        gap: 8px;
        color: #b0b0b0;
    }
    .process-details .process-step.completed {
        color: #4CAF50; /* Green for completed steps */
    }
    .process-details .process-step svg {
        width: 18px;
        height: 18px;
        fill: currentColor; /* Use parent's color */
    }


    /* DeepSearch Panel */
    .deep-panel {
      display:none; /* Hidden by default */
      flex-direction:column;
      background:#0f131a;
      border-radius:10px;
      padding:16px;
      width:100%;
      height:100%;
      overflow-y:auto;
      position:absolute; /* Position over the anim-box content */
      top:0;
      left:0;
      z-index: 2; /* Ensure it's above anim-icon/text */
      animation: fadeIn 0.5s forwards; /* Fade in when displayed */
      scrollbar-width: thin; /* Firefox */
      scrollbar-color: #5e8aff #1f2933; /* Firefox */
    }
    .deep-panel::-webkit-scrollbar {
      width: 8px;
    }
    .deep-panel::-webkit-scrollbar-track {
      background: #1f2933;
      border-radius: 10px;
    }
    .deep-panel::-webkit-scrollbar-thumb {
      background-color: #5e8aff;
      border-radius: 10px;
      border: 2px solid #1f2933;
    }


    .deep-header {
      font-size:1.1rem;
      margin-bottom:12px;
      display:flex;
      align-items:center;
      gap:8px;
      color: #5e8aff; /* Highlight header */
      font-weight: 600;
    }
    .deep-header svg {
      width:20px;
      height:20px;
      fill:#5e8aff;
      animation:spin 2s linear infinite;
    }

    .deep-search-steps {
        display: flex;
        flex-direction: column;
        gap: 8px;
        margin-bottom: 16px;
    }

    .deep-search-steps div {
        font-size: 0.9rem;
        color: #b0b0b0;
        display: flex;
        align-items: center;
    }

    .source-list {
      display:none; /* Hidden by default, shown dynamically */
      flex-wrap:wrap;
      gap:8px;
      margin-bottom:16px; /* Increased margin */
      padding-top: 8px; /* Spacing from steps */
      border-top: 1px solid #1a1f26; /* Separator */
    }

    .source-item {
      background:#1f2933;
      padding:8px 12px; /* Adjusted padding */
      border-radius:8px; /* More rounded */
      font-size:.8rem;
      color: #a0a0a0;
      cursor: pointer;
      transition: background 0.2s ease, color 0.2s ease;
    }
    .source-item:hover {
        background: #2a3942;
        color: #e5e5e5;
    }

    .deep-code {
      background:#1a1f26;
      padding:12px; /* Adjusted padding */
      border-radius:8px; /* More rounded */
      font-family:monospace;
      font-size:.85rem;
      color: #c0c0c0;
      white-space: pre-wrap; /* Preserve whitespace and wrap text */
      word-break: break-all; /* Break long words */
    }

    /* Image Preview in Chat */
    .image-preview {
        width: 100px;
        height: 100px;
        background: #333; /* Placeholder background */
        border-radius: 8px;
        display: flex;
        align-items: center;
        justify-content: center;
        color: #aaa;
        font-size: 0.75rem;
        overflow: hidden;
        margin-top: 5px;
    }
    .image-preview img {
        width: 100%;
        height: 100%;
        object-fit: cover;
        border-radius: 8px;
    }

    /* Keyframe Animations */
    @keyframes fadeIn {
      to { opacity:1; transform:translateY(0); }
    }
    @keyframes blink {
      0%,80%,100% {opacity:0}
      40% {opacity:1}
    }
    @keyframes shimmer {
      0% {transform:translate(-100%,-100%) rotate(25deg)}
      100% {transform:translate(100%,100%) rotate(25deg)}
    }
    @keyframes spin {
      from {transform:rotate(0)}
      to {transform:rotate(360deg)}
    }
/* pin animation */
  #draggableContainer {
            position: relative;
            width: 90%;
            max-width: 800px;
            background-color: #0D0D0D;
            padding: 20px;
            box-sizing: border-box;
            min-height: 400px;
            overflow:visible;
            }
        #draggablePinWrapper {
            position: absolute;
            cursor: grab;
            touch-action: none;
            transition: transform 0.3s ease-in-out;
            z-index: 100;
        }

        #draggablePinWrapper.dragging {
            cursor: grabbing;
            transition: none;
        }
        #draggablePinWrapper img {
            pointer-events: none;
}
/* Center box new replace animation */
      /*──────────────────────────────────────────────────────────────────────────
      ROOT VARIABLES
    ──────────────────────────────────────────────────────────────────────────*/
    :root {
      /* Speed of the vertical slide animation (in seconds) */
      --speed: 10s;

      /* Control how “deep” each item pops in 3D when hovered */
      --hover-z: 24px;

      /* Transition timing for hover states */
      --transition: 0.15s;
    }

    /*──────────────────────────────────────────────────────────────────────────
      ARTICLE / CENTER BOX
    ──────────────────────────────────────────────────────────────────────────*/
    main {
      width: 100%;
      max-width: 600px;
      margin: 2rem;
    }

    article {
      position: relative; /* for absolutely-positioned controls */
      background-color: #0D0D0D;         /* slightly lighter than body */
      border: 1px solid #0D0D0D;
      border-radius: 6px;
      box-shadow: 0 10px 20px -5px rgba(0, 0, 0, 0.7);
      overflow: hidden;
    }

    .window {
      /* maintain a fixed-height “viewport” for the scene */
      height: 350px;
      width: 550px;
      transform-style: preserve-3d;
    }

    .scene {
      --buff: 3rem; /* used for masking edges */
      height: 100%;
      width: 100%;
      mask:
        linear-gradient(transparent, white var(--buff), white calc(100% - var(--buff)), transparent),
        linear-gradient(90deg, transparent, white var(--buff), white calc(100% - var(--buff)), transparent);
      mask-composite: intersect;
      -webkit-mask-composite: destination-in;
    }

    /*──────────────────────────────────────────────────────────────────────────
      GLOBAL GRID & LIST ITEMS (DARK MODE STYLING)
    ──────────────────────────────────────────────────────────────────────────*/
    .grid {
      --count: 6;   /* total columns (used in animation timing) */
      --inset: 0;   /* offset at entry */
      --outset: 2.5;/* offset at exit */

      height: 100%;
      width: 100%;
      display: grid;
      grid-template-columns: 1fr 1fr;
      gap: 1rem;
      padding: 0 1rem;
      transform-style: preserve-3d;
      transition: transform 0.5s ease;
    }

    /* When #dimension is checked, rotate/skew the entire grid in 3D */
    :root:has(#dimension:checked) .grid {
      transform:
        rotateX(calc(1 * 20deg))
        rotateZ(calc(1 * -20deg))
        skewX(calc(1 * 20deg));
    }

    .grid li {
      list-style: none;
      position: relative;
      width: 100%;
      min-height: 60px;
      transform-style: preserve-3d;
      z-index: calc(1 + var(--active, 0));
      animation: slide var(--speed) calc((var(--speed) / var(--count)) * (var(--index) - 8)) infinite linear;
      translate: 0% calc(((var(--count) - var(--index)) + var(--inset)) * 100%);
    }

    .grid:hover li {
      animation-play-state: paused;
    }

    /* Shadow under each item when active */
    .grid li::before {
      content: "";
      position: absolute;
      inset: 4px 4px -2px -2px;
      border-radius: 6px;
      background: rgba(0, 0, 0, 0.3);
      filter: blur(calc(var(--active, 0) * 8px));
      z-index: -1;
      transition: 
        transform var(--transition),
        opacity var(--transition),
        filter var(--transition);
      transform-origin: 50% 0;
      transform: scale(1) scaleY(calc(1 + (var(--active, 0) * 0.05)));
      opacity: calc(1 - var(--active, 0));
      box-shadow: 0 4px 6px -1px rgba(0,0,0,0.6),
                  0 2px 4px -2px rgba(0,0,0,0.6);
    }

    /* Individual “tile” styling (darked out) */
    .item {
      background-color: #111;
      border: 1px solid #333;
      border-radius: 6px;
      color: #eee;
      display: flex;
      align-items: center;
      justify-content: center;
      gap: 1rem;
      padding: 1.25rem;
      text-align: center;
      cursor: pointer;
      transform: translate3d(0, 0, calc(var(--active) * var(--hover-z)));
      transition: 
        transform var(--transition),
        scale var(--transition),
        background-color 0.25s,
        color 0.25s,
        border-color 0.25s,
        box-shadow 0.25s;
      scale: calc(1 + (var(--active) * 0.05));
    }

    .item__icon {
      width: 24px;
      color: rgb(124, 58, 237);
      flex-shrink: 0;
    }

    .item__text {
      flex: 1;
      font-size: 1rem;
    }

    /* Each <li> gets an --index for the animation delay */
    li:nth-of-type(1)  { --index: 0; }
    li:nth-of-type(2)  { --index: 0; }
    li:nth-of-type(3)  { --index: 1; }
    li:nth-of-type(4)  { --index: 1; }
    li:nth-of-type(5)  { --index: 2; }
    li:nth-of-type(6)  { --index: 2; }
    li:nth-of-type(7)  { --index: 3; }
    li:nth-of-type(8)  { --index: 3; }
    li:nth-of-type(9)  { --index: 4; }
    li:nth-of-type(10) { --index: 4; }
    li:nth-of-type(11) { --index: 5; }
    li:nth-of-type(12) { --index: 5; }

    @container (width < 400px) {
      .grid {
        --count: 12;
        --inset: 0;
        --outset: 3;
        grid-template-columns: 1fr;
      }
      li:nth-of-type(1)  { --index: 0; }
      li:nth-of-type(2)  { --index: 1; }
      li:nth-of-type(3)  { --index: 2; }
      li:nth-of-type(4)  { --index: 3; }
      li:nth-of-type(5)  { --index: 4; }
      li:nth-of-type(6)  { --index: 5; }
      li:nth-of-type(7)  { --index: 6; }
      li:nth-of-type(8)  { --index: 7; }
      li:nth-of-type(9)  { --index: 8; }
      li:nth-of-type(10) { --index: 9; }
      li:nth-of-type(11) { --index: 10; }
      li:nth-of-type(12) { --index: 11; }
      li {
        --duration: calc(var(--speed) * 2);
        --delay: calc((var(--duration) / var(--count)) * (var(--index) - 8));
      }
    }

    @media(prefers-reduced-motion: no-preference) {
      .grid {
        gap: 1rem;
      }
      li {
        --duration: calc(var(--speed) * 1);
        --delay: calc((var(--duration) / var(--count)) * (var(--index) - 8));
        animation: slide var(--duration) var(--delay) infinite linear;
        translate: 0% calc(((var(--count) - var(--index)) + var(--inset)) * 100%);
      }
      li:hover {
        --active: 1;
      }
      @keyframes slide {
        100% {
          translate: 0% calc(calc((var(--index) + var(--outset)) * -100%));
        }
      }
      @container (width < 400px) {
        li {
          --duration: calc(var(--speed) * 2);
          --delay: calc((var(--duration) / var(--count)) * (var(--index) - 8));
        }
      }
    }

    /*──────────────────────────────────────────────────────────────────────────
      “3D” CONTROL STYLING (positioned over the box)
    ──────────────────────────────────────────────────────────────────────────*/
    .controls {
      position: absolute;
      top: 80%;
      left: 50%;
      transform: translateX(-50%);
      background-color: rgba(0, 0, 0, 0.7);
      border: 1px solid #444;
      border-radius: 6px;
      padding: 0.5rem 1rem;
      display: flex;
      align-items: center;
      gap: 0.5rem;
      color: #eee;
      z-index: 10;
      font-size: 0.9rem;
    }

    .controls label {
      cursor: pointer;
    }

    .controls input[type="checkbox"] {
      width: 1.2rem;
      height: 1.2rem;
      accent-color: #db2777;
      cursor: pointer;
      }
/* last section------------*/
           <style>
        /* Global Box-sizing and Color Scheme (fundamental resets, do not conflict with unique naming) */
        *, *::after, *::before {
            box-sizing: border-box;
        }

        html { color-scheme: light only; }
        @media(prefers-color-scheme: dark) {
            html { color-scheme: dark only; }
        }

        /* Custom font application via a unique class, applied to body */
        .font-inter {
            font-family: 'Inter', sans-serif;
        }

        /* Standard Vertical Scroller (Grok section - iPhone Layout) */
        .vertical-scroller-container {
            width: 320px; /* iPhone-like width */
            height: 480px; /* Medium iPhone-like height */
            background: #1c1c1c; /* Slightly brighter screen background */
            border-radius: 40px; /* More rounded for iPhone look */
            border: 10px solid #282828; /* Thicker, darker bezel */
            box-sizing: border-box;
            position: relative; /* For notch/speaker styling */
            box-shadow: 0 0 40px rgba(0, 0, 0, 0.7), inset 0 0 15px rgba(255, 255, 255, 0.05); /* Outer shadow + subtle inner screen light */
            overflow: hidden; /* Hide anything outside the main phone frame */
        }

        /* Unique CSS for iPhone notch within the scroller */
        .iphone-notch {
            position: absolute;
            top: 10px; /* Position relative to the container's inner edge (adjust for border) */
            left: 50%;
            transform: translateX(-50%);
            width: 130px; /* Notch width */
            height: 30px; /* Notch height */
            background: #000;
            border-bottom-left-radius: 15px;
            border-bottom-right-radius: 15px;
            border: 1px solid #282828; /* Match the main border color */
            box-sizing: border-box; /* Include border in size */
            z-index: 100; /* Ensure notch is always on top */
            box-shadow: 0 5px 15px rgba(0,0,0,0.5); /* Subtle shadow for depth */
        }

        /* Unique CSS for scrollable content within the iPhone frame */
        .iphone-scrollable-content {
            height: 100%; /* Take full height of parent container */
            width: 100%;
            overflow-y: auto; /* Enable vertical scrolling for this content */
            -ms-overflow-style: none;  /* IE and Edge */
            scrollbar-width: none;  /* Firefox */
            padding-top: 4.5rem; /* Space for the fixed notch */
            padding-bottom: 1rem;
            box-sizing: border-box;
            position: relative; /* Needed for z-index context if internal elements needs it */
            z-index: 50; /* Ensure content is below notch */
        }

        .iphone-scrollable-content::-webkit-scrollbar {
            display: none; /* Hide scrollbar for Chrome, Safari, Opera */
        }

        .vertical-scroller-content {
            display: flex;
            flex-direction: column;
            gap: 1.5rem; /* Gap between content items */
            padding-left: 1rem;
            padding-right: 1rem;
        }

        .vertical-scroller-content img {
            width: 100%;
            height: auto;
            object-fit: cover;
            border-radius: 6px;
        }

        .vertical-scroller-content h3 {
            font-size: 1.25rem;
            font-weight: 600;
            margin-bottom: 0.5rem;
        }

        .vertical-scroller-content p {
            font-size: 0.95rem;
            line-height: 1.5;
            color: #ccc;
        }


        /* API Section (MacBook Layout) */
        .macbook-container {
            position: relative;
            width: 100%;
            max-width: 700px; /* Adjusted wider for the full laptop */
            margin-bottom: 30px; /* Space for the base */
            display: flex;
            flex-direction: column;
            align-items: center;
            box-shadow: 0 10px 60px rgba(0, 0, 0, 0.9); /* More prominent overall shadow */
            border-radius: 18px; /* Overall rounded corners for the laptop */
            background-color: #3a3a3a; /* Darker base color */
        }

        #api-box {
            position: relative;
            width: calc(100% - 10px); /* Account for thin screen border */
            height: 380px; /* Restored fixed height for desktop */
            background-color: #0d0d0d; /* Screen background */
            border-radius: 12px 12px 0 0; /* Rounded top corners, sharp bottom for screen */
            border: 4px solid #1a1a1a; /* Thicker, darker bezel */
            box-sizing: border-box;
            overflow: hidden;
            display: flex;
            flex-direction: column; /* Use flex column for general layout */
            align-items: center;
            justify-content: flex-start; /* Align content to top initially */
            aspect-ratio: 16 / 9; /* Typical laptop screen aspect ratio */
            box-shadow: inset 0 0 20px rgba(0, 0, 0, 0.7), 0 5px 15px rgba(0,0,0,0.3); /* Inner screen depth + subtle screen shadow */
            margin-top: 5px; /* Push down slightly from container top edge */
            padding: 25px; /* General padding for screen content */
        }

        /* Media query for mobile-specific dimensions */
        @media (max-width: 768px) {
            .macbook-container {
                width: 90vw; /* Make container fluid width */
                max-width: none; /* Remove max-width constraint for container */
            }
            #api-box {
                width: calc(100% - 10px); /* Use 100% width of the new fluid container with padding */
                max-width: none; /* Remove max-width constraint for api-box */
                min-height: 300px; /* Adjusted from fixed height to min-height for better content fit */
                aspect-ratio: auto; /* Remove aspect ratio on mobile to allow fixed height */
            }
            /* Adjust content padding for smaller screen if needed */
            #api-box .macbook-screen-content-wrapper {
                padding: 20px; /* Adjusted padding for smaller screens */
                padding-top: 60px; /* Adjusted padding for clock on smaller screens */
            }
            #macbook-clock {
                font-size: 1rem; /* Smaller clock on mobile */
                top: 20px; /* Adjusted position */
                left: 20px; /* Adjusted position */
            }
        }

        /* Unique CSS for MacBook Camera Dot */
        #api-box::before {
            content: '';
            position: absolute;
            top: 15px; /* Position camera at top center */
            left: 50%;
            transform: translateX(-50%);
            width: 7px;
            height: 7px;
            background: #444;
            border-radius: 50%;
            z-index: 10;
            box-shadow: 0 0 3px rgba(0,0,0,0.5);
        }

        .macbook-base {
            width: 98%; /* Slightly narrower base than screen */
            height: 35px; /* Thickness of the base/keyboard area */
            background-color: #2b2b2b; /* Base color, slightly different from screen */
            border-radius: 0 0 18px 18px; /* Rounded bottom corners matching container */
            position: relative;
            z-index: -1; /* Place behind the screen for hinge effect */
            box-shadow: inset 0 5px 10px rgba(0, 0, 0, 0.3), 0 10px 20px rgba(0,0,0,0.5); /* Inner shadow for keyboard area + outer shadow */
            margin-top: -15px; /* Overlap with screen for hinge effect */
            transform: perspective(200px) rotateX(4deg); /* Slight 3D tilt for base */
            transform-origin: top center;
            border-top: 2px solid #444; /* Hinge line */
        }

        /* Unique CSS for Real-time clock on MacBook */
        #macbook-clock {
            position: absolute;
            top: 25px;
            left: 25px;
            font-size: 1.2rem;
            font-weight: 600;
            color: #ccc;
            z-index: 15;
        }

        /* Unique CSS for MacBook screen content wrapper */
        .macbook-screen-content-wrapper {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: space-between;
            padding: 25px;
            padding-top: 60px;
            box-sizing: border-box;
        }


        /* Unique CSS for Input and Button Styling */
        #inputFormContent {
            display: flex;
            flex-direction: column;
            align-items: center;
            gap: 15px;
            width: 100%;
            padding: 0 20px;
            box-sizing: border-box;
            margin-top: auto;
        }

        #apiQueryInput {
            width: 100%;
            padding: 12px 15px;
            border: 1px solid #555;
            border-radius: 8px;
            font-size: 1rem;
            background-color: #2a2a2a;
            color: #fff;
            outline: none;
        }

        #generateResponseButton {
            background-color: #f85922;
            color: white;
            padding: 10px 20px;
            border-radius: 8px;
            font-weight: 600;
            cursor: pointer;
            transition: background-color 0.2s ease-in-out;
            width: 100%;
        }

        #generateResponseButton:hover {
            background-color: #e04a1b;
        }

        /* Unique CSS for Generation Progress */
        .generation-progress {
            display: none;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: #0d0d0d;
            z-index: 10;
            padding-top: 60px;
            box-sizing: border-box;
        }

        .generation-progress p {
            font-size: 1.2rem;
            margin-bottom: 15px;
        }

        .dynamic-number {
            font-size: 4rem;
            font-weight: 800;
            color: #f85922;
        }

        /* Unique CSS for Response Display */
        .response-display {
            display: none;
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            flex-direction: column;
            align-items: flex-start;
            justify-content: flex-start;
            text-align: left;
            padding: 25px;
            padding-top: 60px;
            box-sizing: border-box;
            background-color: #0d0d0d;
            z-index: 10;
            overflow-y: auto;
            -ms-overflow-style: none;
            scrollbar-width: none;
        }
        .response-display::-webkit-scrollbar {
            display: none;
        }

        .response-display h3 {
            font-size: 1.5rem;
            font-weight: 600;
            margin-bottom: 10px;
            color: #f85922;
        }

        .response-display p {
            font-size: 0.95rem;
            line-height: 1.6;
            margin-bottom: 15px;
            color: #ccc;
        }

        .response-display ul {
            list-style-type: disc;
            margin-left: 20px;
            color: #ccc;
        }

        .response-display .footer-text {
            font-size: 0.75rem;
            color: #555;
            margin-top: auto;
            padding-top: 15px;
        }

        /* Infinite Scroller (Developer Docs section) */
        @layer demo {
            .infinite-scroller-main-container {
                --font-level: 5;
                opacity: 1; /* Make visible initially */
                width: 100%;
                max-width: 600px;
                height: 280px;
                max-height: 100%;
                display: flex;
                place-items: center;
                text-align: center;
                position: relative;
                background: #0D0D0D;
                overflow: hidden;
                border-radius: 12px;
                border: 1px solid #333;
                aspect-ratio: 3 / 3.5; /* Updated aspect ratio */

                /* Apply mask for blur effect with sharper transitions */
                mask-image: linear-gradient(
                    to bottom,
                    transparent 0%, /* Start fully transparent */
                    transparent 15%, /* Transparent up to 15% */
                    black 25%, /* Fully opaque by 25% */
                    black 75%, /* Opaque until 75% */
                    transparent 85%, /* Starts fading out at 85% */
                    transparent 100% /* Fully transparent at 100% */
                );
                -webkit-mask-image: linear-gradient(
                    to bottom,
                    transparent 0%,
                    transparent 15%,
                    black 25%,
                    black 75%,
                    transparent 85%,
                    transparent 100%
                );
            }

            .infinite-scroller-main-container ul {
                padding: 0;
                margin: 0;
                list-style-type: none;
                text-transform: uppercase;
                line-height: 1;
                font-family: Impact, Haettenschweiler, 'Arial Narrow Bold',
                sans-serif;
                height: 1lh;
                display: inline-grid;
                position: relative;
                padding-inline: 1em;
                align-items: center;
                align-content: center;
                justify-content: center;
                justify-items: center;
                text-align: center;
                width: 100%;
            }

            .infinite-scroller-main-container li {
                display: inline-block;
                width: fit-content;
                height: 1lh;
                grid-area: 1 / 1;
                color: #666; /* Default dim color for non-highlighted text */
                transition: color 0.2s ease-in-out; /* Smooth color transition */
            }

            .infinite-scroller-main-container .indicator {
                --c: 0.3em;
                position: absolute;
                top: 50%;
                transform: translateY(-50%);
                height: 1lh;
                border: 0.05em solid oklch(0.75 1 var(--h, 320));
                transition: width 0.25s, border-color 0.25s;
                width: calc((var(--width) * 1px) + (var(--c) * 2));
                border-radius: 8px;
                opacity: 1; /* Ensure indicator is visible */
            }
        }

        @layer base {
            :root {
                --font-size-min: 16;
                --font-size-max: 20;
                --font-ratio-min: 1.2;
                --font-ratio-max: 1.33;
                --font-width-min: 375;
                --font-width-max: 1500;
            }

            :where(.fluid) {
                --fluid-min: calc(
                    var(--font-size-min) *
                    pow(var(--font-ratio-min), var(--font-level, 0))
                );
                --fluid-max: calc(
                    var(--font-size-max) *
                    pow(var(--font-ratio-max), var(--font-level, 0))
                );
                --fluid-preferred: calc(
                    (var(--fluid-max) - var(--fluid-min)) /
                    (var(--font-width-max) - var(--font-width-min))
                );
                --fluid-type: clamp(
                    (var(--fluid-min) / 16) * 1rem,
                    ((var(--fluid-min) / 16) * 1rem) -
                    (((var(--fluid-preferred) * var(--font-width-min)) / 16) * 1rem) +
                    (var(--fluid-preferred) * var(--variable-unit, 100vi)),
                    (var(--fluid-max) / 16) * 1rem
                );
                font-size: var(--fluid-type);
            }

            *,
            *::before,
            *::after {
                box-sizing: border-box;
            }
        }

        /* Specific styles for the podcast/footer section */
        .footer-podcast-section {
            background-color: #0d0d0d;
            color: #ffffff;
        }

        .podcast-header-bg {
            background-image: url('https://placehold.co/1200x400/1a1a1a/cccccc?text=Podcast+Header+Background');
            background-size: cover;
            background-position: center;
            border-radius: 0.75rem; /* rounded-xl */
            padding-top: 8rem; /* pb-32 */
            padding-bottom: 8rem; /* pt-32 */
            position: relative;
            overflow: hidden;
        }

        .podcast-header-bg::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: linear-gradient(to right, rgba(0,0,0,0.8), rgba(0,0,0,0.4));
            z-index: 1;
        }

        .podcast-content-wrapper {
            position: relative;
            z-index: 2;
        }

        .social-icons a {
            color: #ffffff;
            transition: color 0.2s ease-in-out;
        }

        .social-icons a:hover {
            color: #f85922; /* Orange hover color */
        }

        .subscribe-button {
            background-color: #92e604; /* Lime green color from image */
            color: #000;
            font-weight: 600;
            transition: background-color 0.2s ease-in-out;
        }

        .subscribe-button:hover {
            background-color: #72b303; /* Darker lime green on hover */
        }

        /* Responsive adjustments for the "VIEW ALL EPISODES" button */
        @media (max-width: 768px) {
            .podcast-header-bg {
                padding-bottom: 4rem;
                display: flex;
                flex-direction: column;
                justify-content: flex-start;
                align-items: flex-start;
            }

            .podcast-content-wrapper {
                margin-bottom: 1.5rem;
                width: 100%;
            }

            .podcast-header-bg > .px-6.py-3 {
                position: static;
                margin-top: 1rem;
                align-self: flex-end;
            }
        }
    </style>
